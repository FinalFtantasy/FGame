%% -*- coding: utf-8 -*-
%% Automatically generated, do not edit
%% Generated by gpb_compile version 4.0.2

-ifndef(down_pb).
-define(down_pb, true).

-define(down_pb_gpb_version, "4.0.2").

-ifndef('USER_SUMMARY_PB_H').
-define('USER_SUMMARY_PB_H', true).
-record(user_summary,
        {uid                    :: non_neg_integer() % = 1, 32 bits
        }).
-endif.

-ifndef('REPLY_END_MATCH_PB_H').
-define('REPLY_END_MATCH_PB_H', true).
-record(reply_end_match,
        {result = success       :: 'success' | 'fail' | integer() % = 1, enum t_result
        }).
-endif.

-ifndef('EVENT_ATTR_PB_H').
-define('EVENT_ATTR_PB_H', true).
-record(event_attr,
        {type                   :: 'crit' | integer(), % = 1, enum t_event_attr
         value                  :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('EVENT_INFO_PB_H').
-define('EVENT_INFO_PB_H', true).
-record(event_info,
        {type                   :: 'teacher_catched' | integer(), % = 1, enum t_event
         start_time             :: non_neg_integer(), % = 2, 32 bits
         duration = 0           :: non_neg_integer(), % = 3, 32 bits
         attrs                  :: #event_attr{} | undefined % = 4
        }).
-endif.

-ifndef('REPLY_START_MATCH_PB_H').
-define('REPLY_START_MATCH_PB_H', true).
-record(reply_start_match,
        {result                 :: 'success' | 'fail' | integer(), % = 1, enum t_result
         room_id                :: non_neg_integer(), % = 2, 32 bits
         opp_users = []         :: [#user_summary{}] | undefined, % = 3
         battle_start_ts        :: non_neg_integer() | undefined, % = 4, 32 bits
         event_infos = []       :: [#event_info{}] | undefined % = 5
        }).
-endif.

-ifndef('REPLY_BATTLE_PB_H').
-define('REPLY_BATTLE_PB_H', true).
-record(reply_battle,
        {reply_start_match      :: #reply_start_match{} | undefined, % = 1
         reply_end_match        :: #reply_end_match{} | undefined, % = 2
         reply_battle           :: #reply_battle{} | undefined % = 3
        }).
-endif.

-ifndef('ATTACK_ATTR_PB_H').
-define('ATTACK_ATTR_PB_H', true).
-record(attack_attr,
        {type                   :: 'crit' | integer(), % = 1, enum t_attack_attr
         value                  :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('ATTACK_PB_H').
-define('ATTACK_PB_H', true).
-record(attack,
        {type = normal          :: 'normal' | integer(), % = 1, enum t_attack
         from_uid               :: non_neg_integer(), % = 2, 32 bits
         to_uid                 :: non_neg_integer(), % = 3, 32 bits
         times = 1              :: non_neg_integer(), % = 4, 32 bits
         attrs                  :: #attack_attr{} | undefined % = 5
        }).
-endif.

-ifndef('EVENT_PB_H').
-define('EVENT_PB_H', true).
-record(event,
        {type = teacher_catched :: 'teacher_catched' | integer(), % = 1, enum t_event
         affected_uids = []     :: [non_neg_integer()] | undefined, % = 2, 32 bits
         times = 0              :: non_neg_integer(), % = 3, 32 bits
         attrs                  :: #event_attr{} | undefined % = 4
        }).
-endif.

-ifndef('BATTLE_PB_H').
-define('BATTLE_PB_H', true).
-record(battle,
        {attack                 :: #attack{} | undefined, % = 1
         event                  :: #event{} | undefined % = 2
        }).
-endif.

-ifndef('SCORE_ATTR_PB_H').
-define('SCORE_ATTR_PB_H', true).
-record(score_attr,
        {type                   :: 'buff' | integer(), % = 1, enum t_score_attr
         value                  :: non_neg_integer() | undefined % = 2, 32 bits
        }).
-endif.

-ifndef('SCORE_PB_H').
-define('SCORE_PB_H', true).
-record(score,
        {uid                    :: non_neg_integer(), % = 1, 32 bits
         total_score = 0        :: non_neg_integer(), % = 2, 32 bits
         attack_score = 0       :: non_neg_integer(), % = 3, 32 bits
         event_score = 0        :: non_neg_integer(), % = 4, 32 bits
         attrs                  :: #score_attr{} | undefined % = 5
        }).
-endif.

-ifndef('REPLY_BATTLE_INFO_PB_H').
-define('REPLY_BATTLE_INFO_PB_H', true).
-record(reply_battle_info,
        {battle_result          :: 'victory' | 'defeat' | 'draw' | integer() | undefined, % = 1, enum t_battle_result
         battle                 :: #battle{} | undefined, % = 2
         scores = []            :: [{non_neg_integer(), #score{}}] | undefined % = 3
        }).
-endif.

-ifndef('REPLY_ERR_CODE_PB_H').
-define('REPLY_ERR_CODE_PB_H', true).
-record(reply_err_code,
        {err_code               :: iolist()         % = 1
        }).
-endif.

-ifndef('DOWN_MSG_PB_H').
-define('DOWN_MSG_PB_H', true).
-record(down_msg,
        {reply_seq = 0          :: non_neg_integer(), % = 1, 32 bits
         reply_svr_ts = 0       :: non_neg_integer(), % = 2, 32 bits
         reply_err_code         :: #reply_err_code{} | undefined, % = 3
         reply_battle_info      :: #reply_battle_info{} | undefined % = 4
        }).
-endif.

-endif.
